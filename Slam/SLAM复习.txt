ekf：
--->xt = A*xt-1 + B*ut + εt
--->zt = C*xt + δ
--->1.控制更新 2.计算K卡尔曼增益 3.测量更新

icp：https://blog.csdn.net/electech6/article/details/95235145
迭代过程
实际上刚才我们只完成了一次计算，而ICP的全称是Iterative Closest Point，即迭代最近点。我们来理解一下整个过程
1.对P中的每个点，在Q中找到匹配的最近点。这里需要注意，并不是每次的点云都是一一匹配，点云的数量是一方面，另外可以预见的是，很容易出现多对一最近点匹配，当然，可以通过一些额外的限定在达到一对一匹配的效果。
2.根据上述过程计算最优的R和T.
3.利用得到的位姿作用于P，如果此时的误差大于阈值，则重新进行迭代，直到迭代次数达到阈值或者误差小于阈值。
简单的理解，有点像梯度下降寻找极值点的过程，同样的，一个好的初值对加快ICP的收敛过程也十分重要。
另外点对点的计算量十分大，复杂度为$O(mn)$，在一维的情况下，二分查找是常见的优化，对高维的情况，一个类似的过程是通过KD树来实现的。
KD树构建的复杂度为O(log(m))，查找的复杂度为O(mlog(n))，所以利用KD查找最近邻的复杂度为O(mlog(n))，远小于O(mn)。

优化的配准方法
1.基于特征点的配准方法：减少数据量、噪声
2.pl-icp：二阶收敛精度高，先找到最近两点并连线，最小化线之间误差

ndt：https://zhuanlan.zhihu.com/p/96908474

amcl：https://blog.csdn.net/weixin_38145317/article/details/82852580
PnP：https://www.cnblogs.com/yepeichu/p/12670818.html
P3P/EPnP：
--->利用三角形相似性质，求解2组3个投影点在相机坐标系下的3D坐标
--->最后把问题转换成求解两组三维匹配点的位姿估计问题（ICP）
--->ICP又分利用SVD分解和Bundle Adjustment两种方式，但是本质上并无区别，毕竟SVD也是构建非线性最小二乘问题
BA：非线性优化
Cartographer：https://blog.csdn.net/weixin_36976685/article/details/84994701?spm=1001.2014.3001.5502
cartographer前端两种匹配：https://blog.csdn.net/xiaoma_bk/article/details/85046905
orb-slam2：https://www.cnblogs.com/yepeichu/p/11602502.html
rf2o：前提静态场景 https://zhuanlan.zhihu.com/p/51010526
laser畸变校正：一帧激光中，首尾点云位姿差值，通过角度比例插值修正

非线性优化方法
--->一阶
--->二阶牛顿法
--->高斯牛顿法：比牛顿法快，稳定性差、不准确、不收敛
--->列文伯格-马夸尔特方法：增加信赖域，拉格朗日对偶乘子，更稳定、准确（相当于条件选择一阶或二阶法）


18817958267

