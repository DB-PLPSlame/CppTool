ekf：
--->xt = A*xt-1 + B*ut + εt
--->zt = C*xt + δ
--->1.控制更新 2.计算K卡尔曼增益 3.测量更新

icp：https://blog.csdn.net/electech6/article/details/95235145
迭代过程
实际上刚才我们只完成了一次计算，而ICP的全称是Iterative Closest Point，即迭代最近点。我们来理解一下整个过程
1.对P中的每个点，在Q中找到匹配的最近点。这里需要注意，并不是每次的点云都是一一匹配，点云的数量是一方面，另外可以预见的是，很容易出现多对一最近点匹配，当然，可以通过一些额外的限定在达到一对一匹配的效果。
2.根据上述过程计算最优的R和T.
3.利用得到的位姿作用于P，如果此时的误差大于阈值，则重新进行迭代，直到迭代次数达到阈值或者误差小于阈值。
简单的理解，有点像梯度下降寻找极值点的过程，同样的，一个好的初值对加快ICP的收敛过程也十分重要。
另外点对点的计算量十分大，复杂度为$O(mn)$，在一维的情况下，二分查找是常见的优化，对高维的情况，一个类似的过程是通过KD树来实现的。
KD树构建的复杂度为O(log(m))，查找的复杂度为O(mlog(n))，所以利用KD查找最近邻的复杂度为O(mlog(n))，远小于O(mn)。

优化的配准方法
1.基于特征点的配准方法：减少数据量、噪声
2.pl-icp：二阶收敛精度高，先找到最近两点并连线，最小化线之间误差

ndt：https://zhuanlan.zhihu.com/p/96908474
1）划分网格
2）计算各网格的PDF
3）对每个点云数据，找到对应的网格点，并根据PDF和评分函数计算结果
4）根据结果更新g和H，计算新的步长
5）判断是否收敛或达到迭代次数，是则跳出，否则继续步骤3-5

amcl：https://blog.csdn.net/weixin_38145317/article/details/82852580
PnP：https://www.cnblogs.com/yepeichu/p/12670818.html
P3P/EPnP：
--->利用三角形相似性质，求解2组3个投影点在相机坐标系下的3D坐标
--->最后把问题转换成求解两组三维匹配点的位姿估计问题（ICP）
--->ICP又分利用SVD分解和Bundle Adjustment两种方式，但是本质上并无区别，毕竟SVD也是构建非线性最小二乘问题
BA：非线性优化
Cartographer：https://blog.csdn.net/weixin_36976685/article/details/84994701?spm=1001.2014.3001.5502
cartographer前端两种匹配：https://blog.csdn.net/xiaoma_bk/article/details/85046905
orb-slam2：https://www.cnblogs.com/yepeichu/p/11602502.html
rf2o：前提静态场景 https://zhuanlan.zhihu.com/p/51010526
laser畸变校正：一帧激光中，首尾点云位姿差值，通过角度比例插值修正

非线性优化方法
--->一阶
--->二阶牛顿法
--->高斯牛顿法：比牛顿法快，稳定性差、不准确、不收敛
--->列文伯格-马夸尔特方法：增加信赖域，拉格朗日对偶乘子，更稳定、准确（相当于条件选择一阶或二阶法）


18817958267

=========================
2.1 地图数据的生成: http://wiki.autowise.ai/pages/viewpage.action?pageId=38452141

为了更好地与已有地图建立起回环，对lio-sam的初始化进行了调整，lidar的初始位置与GPS的数据对齐，并通过bound and branch和ICP等方法，进一步确认初始位置。

lio-sam运行完之后，保存：
(1)imu的数据
(2)优化的位姿
(3)与位姿相匹配的gps数据
(4)lidar feature数据

============================
LIO-SAM: https://zhuanlan.zhihu.com/p/153394930?from_voters_page=true

IMU和LiDAR的联合位姿估计已经被广泛研究，大致分为两类。
第一类是松耦合的方法，例如LOAM和LeGO-LOAM中使用IMU去除LiDAR点云的运动畸变，以及[8]-[12]使用EKF整合LiDAR和IMU的测量。
第二类是紧耦合的方法，例如R-LINS[15]，使用误差状态卡尔曼滤波器迭代地修正机器人的位姿估计，再比如LIOM [16]联合优化LiDAR和IMU测量。但是LIOM一次性处理所有测量，因此不能实时运行。
而本文也属于紧耦合的激光-惯性里程计方法，只是采用了因子图优化而不是滤波的方法。

A. 因子图和IMU预积分
因子图: 表达形式不同于图优化，可以互相转化
IMU预积分: 使用激光里程数据估计imu bias，之后使用imu里程计做激光运动畸变校正


B. 激光里程计因子

之后，我们利用LOAM中的方法匹配边缘特征、平面特征，建立点线和点面距离约束。通过最小化所有约束，优化修正位姿。
点云匹配和位姿优化过程与LOAM/LeGO-LOAM相同，不再赘述。不同的是，这里使用过去n+1帧关键帧的组合点云而不是全局点云和最新帧进行匹配。


C. GPS因子

当接收到GPS测量后，我们首先使用[20]的方法变换它们到笛卡尔坐标系中。当一个新的位姿节点被插入到因子图后，我们关联GPS因子到该位姿节点中去。具体地，我们线性插值GPS的时间戳，得到对应最新位姿节点的GPS位置。

由于在GPS信号一直存在的时候，持续添加GPS因子没有意义。因为漂移很缓慢。所以在实际操作过程中，我们只添加GPS因子当位姿估计协方差矩阵变得很大的时候。
=========================================
1.曲率计算
2.markOccludedPoints
3.imu预积分(位姿、速度、bias)
4.pcl::KdTreeFLANN<PointType>


