ROS坐标系分类：
一个机器人系统中通常会有多个三维参考坐标系，而且这些坐标系之间的相对关系随时间推移会变化。这里举一个实际的机器人应用场景例子，来说明这种关系和变化
--->全局世界坐标系：通常为激光slam构建出来的栅格地图的坐标系map。
--->机器人底盘坐标系：通常为机器人底盘的坐标系base_footprint或者base_link。
--->机器人上各部件自己的坐标系：比如激光雷达、imu等传感器自己的坐标系base_laser_link、imu_link。

这些坐标系之间的关系有些是静态的、有些是动态的。
当机器人底盘移动的过程中，机器人底盘与世界的相对关系map->base_footprint是动态的；
而安装在机器人底盘上的激光雷达、imu这些传感器与机器人底盘的相对关系base_footprint->base_laser_link、base_footprint->imu_link是静态的。

tf::TransformListener.lookupTransform()：监听坐标系间相对转换关系
tf::TransformBroadcaster().sendTransform()：用于发布坐标转换关系


====================
3、2D激光SLAM的应用
数据的预处理—非常重要！！！
轮式里程计的标定
不同系统之间的时间同步
激光雷达运动畸变去除

4、实际环境中的问题：
动态物体、环境变化
全局定位、几何结构相似环境
上下坡、地面凹凸不平(融合imu)
激光雷达运动畸变(机器人发生大幅度的运动，会导致扫描到的点云产生严重的变形)
没有几何特征的场景(平行于一堵墙运动)
机器人载重的改变
地面材质的变化
建图的操作复杂


