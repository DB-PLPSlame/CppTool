自我介绍
马志国 149198978
MFC的课程组成
1 MFC的机制和原理 (12天左右)
2 windows平台上的数据库访问技术，包括ODBC类和ADO。
3 windows平台上的网络通信编程，socket库(2.2版本)。(3天左右)
4 MFC的项目，远程控制项目。(3天左右)
MFC的课程目标
1 MFC框架生成的程序的组成部分和执行流程。
2 MFC的六个机制。程序启动、（窗口创建）、消息映射（命令消息
  的路由）、运行时类信息、动态创建和序列化。
3 使用断点调试技术(F9、F5、Ctrl+F5、F10、F11)
4 通过call stack窗口查看函数之间的调用关系
5 向导和工具的使用
6 借助于MSDN
-----------------------------------------------------------
day01 MFC的基础
一 什么是MFC？
   Microsoft Foundation Classes，微软基础类库。
   一方面是一个庞大的类库。
   另外一方面，它还是一个应用程序的编程框架。
二 MFC的用途
   基于框架编程，提高开发效率，缩短开发周期，降低开发成本
三 MFC的应用程序的类型
   1 应用程序
     1.1 单文档视图程序(只能管理一个文档)
         CWinApp类-应用程序类，负责整个应用程序的管理。
         CFrameWnd类-单文档的主框架窗口类。
         CView及其子类-视图窗口类，用来显示数据的窗口类。
         CDocument类-文档类，用来管理数据的，包括数据的保存和                      加载。
     1.2 多文档视图程序(可以管理多个文档)
         CWinApp类-应用程序类，负责整个应用程序的管理。
         CMDIFrameWnd-多文档的主框架窗口类。
         CMDIChildWnd-多文档的子框架窗口类。
         CView及其子类-视图窗口类，用来显示数据的窗口类。
         CDocument类-文档类，用来管理数据的，包括数据的保存和                      加载。
     1.3 基于对话框的程序
         CWinApp类-应用程序类，负责整个应用程序的管理。
         CDialog-对话框类，创建对话框窗口。 

   2 库程序
     2.1 规则Dll库，接口是规则的，可以被其它的C++程序使用。
         2.1.1 动态链接MFC库
         2.1.2 静态链接MFC库  
 
     2.2 MFC的扩展dll库，接口是MFC的，只能被MFC程序使用。
         主要是用来扩展MFC的功能的。

   3 控制台程序
     在Win32向导下创建支持MFC库的程序。可以使用它测试一些
     函数或者小的功能模块。
四 MFC主要的类(主要参考类的继承关系图)
   1 CObject类-继承关系中的顶层父类。主要实现了MFC的一些特性和
               机制。例如：运行时类信息、动态创建和序列化。
   2 CCmdTarget类-父类是CObject类，该类实现了对命令消息的处理 
       
   3 CWinApp类-应用程序类，管理整个应用程序的运行。   
   4 CWnd类-父类是CCmdTarget类，提供了窗口的基本操作。包括以下
     几个不同类型窗口的子类：框架窗口类、视图窗口类、对话框类     、控件类、工具栏与状态栏类。
   5 CDocument类-父类也是CCmdTarget类，主要用来管理数据的。
   6 CException类-异常处理类。
   7 CFile类-文件操作类
   8 CDC以及CGdiObject类及其子类-绘图设备和绘图对象类。
   9 MFC的集合类，在实际的项目开发中，尽量多使用stl代替它。
   10 非CObject类的子类，主要定义了在项目中常用的一些数据结构      ，例如CString类、CTime类、CPoint类、CSize类等等。
   
五 第一个MFC程序(与Win32程序对比)
   1.使用Win32向导创建一个空项目，设置MFC环境
     右击项目选择属性，设置静态链接MFC库和使用多字节字符集。
   2.在项目中添加一个MFCBase.cpp文件。
   3.添加CWinApp类的子类CMyWinApp类。并使用CMyWinApp类定义
     全局对象theApp。重写虚函数InitInstance(),在该函数中完成
     窗口程序的创建。  
   4.添加CFrameWnd类的子类CMyFrameWnd类。
   5.在CMyWinApp::InitInstance()函数中，创建、显示和更新窗口。
六 程序的执行流程
   1.0 程序启动，调用MFC框架提供的WinMain()函数，在函数中，
       调用AfxWinMain()函数。在函数中，执行以下步骤。
   1.1 获取theApp对象地址分别保存到pThread和pApp中 
   1.2 应用程序的内部初始化和全局初始化
   1.3 通常重新InitInstance()虚函数，完成用户代码，我们主要
       是创建一个基本的窗口。
   1.4 调用Run()函数完成消息循环。当用户点击关闭按钮时，产生          WM_QUIT消息，调用ExitInstance()函数，释放和清理资源。
   1.5 AfxWinMain()函数返回。

七 应用程序类CWinApp类的总结
   1 虚函数
     1.1 InitInstance()-完成程序的创建和各种库的初始化。
     1.2 Run()-消息循环
     1.3 OnIdle()-空闲处理
     1.4 ExitInstance()-程序在退出时，释放和清理资源。
   2 成员变量
     m_pMainWnd-保存应用程序的主窗口。
     
           
   
   
     
    

   














  

   