一 属性页对话框    
   1 相关类
     CPropertyPage类-页面类，父类是CDialog类。
     CPropertySheet类-表单类。
     一个完整的属性页对话框=一个表单对象+多个页面对象组成。
   2 分类
     标签式-常用于参数、选项等配置。
     向导式-常用于引导用户按既定步骤操作，完成某种功能。
   3 标签式属性页的使用步骤
     3.1 插入对话框资源，双击生成相应的类，注意父类是CPropertyPage类。
     3.2 添加CPropertSheet类的子类CSetupSheet类。
     3.3 在表单中添加页面
         CPropertSheet::AddPage
     3.4 创建和显示
         CPropertSheet::DoModal  
     3.5 将应用按钮设置为可用
         CPropertyPage::SetModified(TRUE)
     3.6 消息处理(添加虚函数的方式)
         CPropertyPage::OnApply  
         CPropertyPage::OnOK
         CPropertyPage::OnCancel
     当点击确定、取消和应用按钮时，引起所有页面的消息处理函数的调用。

    4 标签式属性页的使用步骤 
     4.1 插入对话框资源，双击生成相应的类，注意父类是CPropertyPage类。
     4.2 添加CPropertSheet类的子类CSetupSheet类。
     4.3 在表单中添加页面
         CPropertSheet::AddPage
     4.4 设置向导模式
         CPropertSheet::SetWizardMode
     4.5 创建和显示
         CPropertSheet::DoModal 
     4.6 设置向导按钮
         CPropertySheet::SetWizardButtons
         在 CPropertyPage::OnSetActive函数中设置(虚函数)

第二部分 基于Windows平台的数据库访问技术     
 1 相关技术介绍
 1.1 ODBC- Open Database Connectivity，微软开放式数据互联。一组专门
           用于访问数据库的API。开发前，首先将不同的数据库设置为ODBC
           数据源。MFC将ODBC进行封装,产生ODBC类。
 1.2 DAO-基于ODBC的，目前已经被淘汰
 1.3 OLE DB-基于COM组件技术的，提供了一组用于访问和操作数据库的接口。
            由于学习和使用难度大，并没有流行起来。
 1.4 ADO-基于OLE DB之上做了封装，提供了更加简单的访问和操作数据库的
            接口。后来逐渐流行起来，成为Windows系统上程序员广泛
            使用的技术之一。
二 ODBC类的使用
   1 相关类
     CDatabase类-主要提供数据库的连接和关闭功能。
     CRecordset类-主要提供对数据的操作。
     #include <afxdb.h>
   2 将数据库设置为ODBC数据源
     开始\控制面板\系统和安全\管理工具\数据源（ODBC）。
   3 访问步骤
      3.1 打开数据源(连接数据库) 
          CDatabase::Open
      3.2 打开记录集(将数据表的数据读取到记录集)
          CRecordset::Open
      3.3 获取记录集中字段的数量
          CRecordset::GetODBCFieldCount
      3.4 获取记录集中字段的信息
          CRecordset::GetODBCFieldInfo
      3.5 获取记录集中字段的值
          CRecordset::GetFieldValue
      3.6 记录集的指针操作
          CRecordset::MoveNext
          CRecordset::MovePrevious
          CRecordset::MoveFirst
          CRecordset::MoveLast
          CRecordset::IsEOF
          CRecordset::IsBOF
      3.7 关闭记录集
          CRecordset::Close
      3.8 关闭数据库
          CDatabase::Close
      
     
     

三 ADO的使用 
   1 是一个独立于MFC的单独的组件。可以被C++程序员、VB程序员以及asp
     程序员使用。MFC程序在使用ADO组件时，首先需要导入组件。
   2 相关文件
     文件名称：msado15.dll
     文件路径:C:\Program Files\Common Files\System\ado\msado15.dll
   3 导入组件
     #import "文件路径" no_namespace rename("EOF","adoEOF") 
     编译项目，生成 msado15.tlh和 msado15.tli两个文件。
   4 初始化COM库
     4.1 在App::InitInstance()函数中，初始化COM库
         CoInitialize(NULL); 
     4.2 在App::ExitInstance()函数中，卸载COM库
         CoUninitialize(); 
   5 ADO接口类的介绍
     5.1 _ConnectionPtr类-功能与ODBC的CDatabase类的功能相同。
                          使用CAdoDatabase封装该类。

     5.2 _RecordsetPtr类-功能与ODBC的CRecordset类的功能相同。
                          使用CAdoRecordset封装该类。
   
   6 _ConnectionPtr类的使用
     6.1 连接数据库
           HRESULT Open (
            _bstr_t ConnectionString,//连接字符串
            _bstr_t UserID,//数据库的登录名称  ""
            _bstr_t Password,//密码            ""
            long Options//连接选项，默认-1 即可。-1
            ); 
     Access数据库的连接字符串：

     Provider=Microsoft.Jet.OLEDB.4.0;
     Data Source=E:\MFC\db\odbc.mdb

     Provider=Microsoft.Jet.OLEDB.4.0;
     Data Source=E:\MFC\db\odbc.mdb;
     Persist Security Info=True;
     User ID=csd1608;
     PASSWORD=123456;

     6.2 关闭数据库 
         Close
          
      








